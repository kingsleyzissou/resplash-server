{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config/index.js","webpack:///./src/database/index.js","webpack:///./src/graphql/resolvers/collection.js","webpack:///./src/graphql/resolvers/index.js","webpack:///./src/graphql/resolvers/user.js","webpack:///./src/graphql/schema/aggregator.js","webpack:///./src/graphql/schema/artist.js","webpack:///./src/graphql/schema/avatar.js","webpack:///./src/graphql/schema/base.js","webpack:///./src/graphql/schema/collection.js","webpack:///./src/graphql/schema/comment.js","webpack:///./src/graphql/schema/image.js","webpack:///./src/graphql/schema/index.js","webpack:///./src/graphql/schema/url.js","webpack:///./src/graphql/schema/user.js","webpack:///./src/graphql/server.js","webpack:///./src/index.js","webpack:///./src/middleware/auth/authenticated.js","webpack:///./src/middleware/auth/getToken.js","webpack:///./src/middleware/auth/index.js","webpack:///./src/middleware/errors/handler.js","webpack:///./src/middleware/errors/index.js","webpack:///./src/middleware/errors/reporter.js","webpack:///./src/middleware/index.js","webpack:///./src/middleware/validate/index.js","webpack:///./src/models/artist/schema.js","webpack:///./src/models/avatar/schema.js","webpack:///./src/models/collection/index.js","webpack:///./src/models/collection/model.js","webpack:///./src/models/collection/schema.js","webpack:///./src/models/comment/schema.js","webpack:///./src/models/image/index.js","webpack:///./src/models/image/model.js","webpack:///./src/models/image/schema.js","webpack:///./src/models/url/schema.js","webpack:///./src/models/user/index.js","webpack:///./src/models/user/model.js","webpack:///./src/models/user/schema.js","webpack:///./src/routes/index.js","webpack:///./src/server.js","webpack:///./src/services/auth/generateJWT.js","webpack:///./src/services/auth/index.js","webpack:///./src/services/auth/login.js","webpack:///./src/services/auth/register.js","webpack:///./src/utilities/index.js","webpack:///./src/utilities/logger.js","webpack:///./src/utilities/tantrum.js","webpack:///./src/validators/registration.js","webpack:///external \"@hapi/joi\"","webpack:///external \"apollo-server-express\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongodb-memory-server\"","webpack:///external \"mongoose\"","webpack:///external \"path\"","webpack:///external \"winston\""],"names":["dotenv","config","test","process","connectionString","env","DB_HOST","MongoMemoryServer","getConnectionString","then","string","port","APP_PORT","root","path","resolve","__dirname","db","host","options","useCreateIndex","useNewUrlParser","useUnifiedTopology","jwtSecret","JWT_SECRET","database","server","connect","mongoose","catch","error","report","connection","on","disconnect","stop","close","reset","dropDatabase","logger","Query","collection","_","_id","user","Collection","findById","collections","args","find","Mutation","addCollection","input","save","err","Tantrum","addImage","image","Image","findOne","images","push","removeImage","pull","userResolvers","collectionResolvers","User","base","comment","avatar","artist","url","gql","aggregation","map","s","ApolloServer","introspection","playground","typeDefs","resolvers","context","req","token","getToken","headers","authenticated","formatError","message","replace","app","listen","info","jwt","verify","authorization","split","handler","status","res","next","send","reporter","schema","value","validate","body","abortEarly","messages","details","detail","fields","Schema","id","type","String","required","name","username","profile_image","AvatarSchema","medium","Model","model","subtitle","description","Types","ObjectId","ref","ImageSchema","default","CommentSchema","likes","Number","created_at","Date","updated_at","enum","subcomments","alt_description","ArtistSchema","urls","UrlSchema","regular","full","pre","isModified","hash","bcrypt","password","methods","verifyPassword","cipher","plain","comparison","compare","email","select","router","get","post","console","log","response","login","registration","register","use","errors","express","Router","cors","helmet","bodyParser","urlencoded","extended","json","apollo","applyMiddleware","routes","generateJWT","sign","toJSON","exec","verified","combine","colorize","simple","format","createLogger","level","transports","Console","silent","Error","constructor","code","Joi","object","min","confirm","valid"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import path from 'path';\nimport dotenv from 'dotenv';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\ndotenv.config();\n\nconst test = process.env.NODE_ENV === 'test';\n\nconst connectionString = (!test)\n  ? process.env.DB_HOST\n  : new MongoMemoryServer()\n    .getConnectionString()\n    .then((string) => string);\n\nexport default {\n  env: process.env.NODE_ENV,\n  port: process.env.APP_PORT || 4000,\n  root: path.resolve(__dirname, '../', '../'),\n  db: {\n    host: connectionString,\n    options: {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    },\n  },\n  jwtSecret: process.env.JWT_SECRET,\n};\n","import mongoose from 'mongoose';\nimport { logger } from '~/utilities';\n\nconst database = {\n  // Connect to MongoDB\n  server: {},\n  async connect({ host, options, server }) {\n    // Attempt connection or else\n    // catch any connection errors\n    this.server = server;\n    await mongoose.connect(host, options)\n      .catch((error) => this.report(error));\n    // Handle errors after initial connection\n    mongoose.connection.on('error', (error) => this.report(error));\n  },\n  async disconnect() {\n    if (this.server) await this.server.stop();\n    await mongoose.connection.close();\n  },\n  async reset() {\n    await mongoose.connection.db.dropDatabase();\n  },\n  // Report errors\n  report(error) {\n    logger.error(error);\n  },\n};\n\nexport default database;\n","import Collection from '~/models/collection';\nimport Image from '~/models/image';\nimport Tantrum from '~/utilities/tantrum';\n\nexport default {\n\n  Query: {\n    collection: async (_, { _id }, { user }) => {\n      if (!user) return null;\n      return Collection.findById({ _id });\n    },\n    collections: async (_, args, { user }) => {\n      if (!user) return null;\n      return Collection.find({\n        user: {\n          _id: user._id,\n        },\n      });\n    },\n  },\n\n  Mutation: {\n    addCollection: async (_, { input }) => {\n      const collection = new Collection({ ...input });\n      await collection\n        .save()\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      return collection;\n    },\n    addImage: async (_, { _id, input }) => {\n      const image = new Image({ ...input });\n      const collection = await Collection.findOne({ _id })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      collection.images.push(image);\n      collection.save();\n      return collection;\n    },\n    removeImage: async (_, { _id, image }) => {\n      const collection = await Collection.findOne({ _id })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      collection.images.pull(image);\n      collection.save();\n      return collection;\n    },\n  },\n\n};\n","import userResolvers from './user';\nimport collectionResolvers from './collection';\n\nexport default [\n  userResolvers,\n  collectionResolvers,\n];\n","import User from '~/models/user';\n\nexport default {\n\n  Query: {\n    user: async (_, { _id }, { user }) => {\n      if (!user) return null;\n      return User.findById({ _id });\n    },\n  },\n\n};\n","import base from './base';\nimport user from './user';\nimport collection from './collection';\nimport image from './image';\nimport comment from './comment';\nimport artist from './artist';\nimport avatar from './avatar';\nimport url from './url';\n\nexport default [base, user, collection, image, comment, avatar, artist, url];\n","export default (gql) => gql`\n\n  type Artist {\n    id: String,\n    name: String,\n    profile_image: Avatar,\n    username: String,\n  }\n\n  input ArtistInput {\n    id: String,\n    name: String,\n    profile_image: AvatarInput,\n    username: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  type Avatar {\n    medium: String,\n  }\n\n  input AvatarInput {\n    medium: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  type Query {\n    hello: String\n  }\n\n  type Mutation {\n    sayHello(name: String!): String!\n  }\n\n`;\n","export default (gql) => gql`\n\n  extend type Query {\n    collection(_id: String): Collection,\n    collections: [Collection],\n  }\n\n  extend type Mutation {\n    addCollection(collection: CollectionInput): Collection,\n    addImage(_id: String, input: ImageInput): Collection,\n    removeImage(_id: String, image: String): Collection,\n  }\n\n  type Collection {\n    _id: String,\n    name: String,\n    subtitle: String,\n    description: String,\n    user: User,\n    images: [Image],\n    comments: [Comment],\n    likes: Int,\n  }\n\n  input CollectionInput {\n    name: String,\n    subtitle: String,\n    description: String,\n    user: String,\n    images: [ImageInput],\n    comments: [CommentInput],\n    likes: Int,\n  }\n\n`;\n","export default (gql) => gql`\n\n  enum CommentType {\n    collection\n    comment\n  }\n\n  extend type Query {\n    comment(_id: String): Comment,\n    comments: [Comment],\n  }\n\n  type Comment {\n    _id: String,\n    type: CommentType,\n    subcomments: [Comment],\n    user: User,\n    likes: Int,\n  }\n\n  input CommentInput {\n    type: CommentType,\n    subcomments: [CommentInput],\n    user: String,\n    likes: Int,\n  }\n\n`;\n","export default (gql) => gql`\n\n  extend type Query {\n    image(id: String): Image,\n    images: [Image],\n  }\n\n  type Image {\n    _id: String,\n    description: String,\n    alt_description: String,\n    user: Artist,\n    urls: Url,\n    likes: Int,\n  }\n\n  input ImageInput {\n    id: String,\n    description: String,\n    alt_description: String,\n    user: ArtistInput,\n    urls: UrlInput,\n    likes: Int,\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\nimport aggregation from './aggregator';\n\nexport default aggregation.map((s) => s(gql));\n","export default (gql) => gql`\n\n  type Url {\n    full: String,\n    regular: String,\n  }\n\n  input UrlInput {\n    full: String,\n    regular: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  extend type Query {\n    user(_id: String): User,\n  }\n\n  type User {\n    _id: String,\n    name: String,\n    username: String,\n    email: String,\n    collections: [Collection],\n  }\n\n`;\n","import { ApolloServer } from 'apollo-server-express';\nimport { authenticated, getToken } from '~/middleware/auth';\nimport resolvers from './resolvers';\nimport typeDefs from './schema';\n\nexport default new ApolloServer({\n  introspection: true,\n  playground: true,\n  typeDefs,\n  resolvers,\n  async context({ req }) {\n    const token = getToken(req.headers);\n    return {\n      user: (authenticated({ token }))\n        ? authenticated({ token })\n        : null,\n    };\n  },\n  formatError: (error) => {\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n    return {\n      ...error,\n      message,\n    };\n  },\n});\n","import server from '~/server';\nimport config from '~/config';\nimport database from '~/database';\nimport { logger } from '~/utilities';\n\n// Prepare the server\nconst app = server();\n\n// Get the server port\nconst { port, db } = config;\n\n// Connect to the database\ndatabase.connect(db);\n\n\n// Start the server\napp.listen(port, () => {\n  logger.info(\n    `App started on http://localhost:${port}`,\n  );\n});\n\nexport default app;\n","import jwt from 'jsonwebtoken';\nimport config from '~/config';\nimport Tantrum from '~/utilities/tantrum';\n\nconst authenticated = ({ token }) => {\n  if (!token) throw new Tantrum(401, 'User not authenticated');\n  return jwt.verify(token, config.jwtSecret);\n};\n\nexport default authenticated;\n","import Tantrum from '~/utilities/tantrum';\n\nconst getToken = ({ authorization }) => {\n  if (!authorization) throw new Tantrum(403, 'User not authorised');\n  return authorization.split(' ')[1];\n};\n\nexport default getToken;\n","import authenticated from './authenticated';\nimport getToken from './getToken';\n\nexport { authenticated, getToken };\n","// last method in the stack to catch\n// all errors and send the status cod\n// and error message\n// eslint-disable-next-line\nconst handler = ({ message, status }, req, res, next) => {\n  res.status(status).send({ message });\n};\n\nexport default handler;\n","import handler from './handler';\nimport reporter from './reporter';\n\n// export the two functions in\n// a single object\nexport default {\n  reporter,\n  handler,\n};\n","import { logger, Tantrum } from '~/utilities';\n\n// First method in the error stack\n// catches the error, logs it and\n// passes it down the stack\nconst reporter = ({ message, status }, req, res, next) => {\n  // Throw tantrum to be used for error\n  const error = new Tantrum(status, message);\n  // Log error\n  logger.error(message);\n  // Pass the error on\n  next(error);\n};\n\nexport default reporter;\n","import errors from './errors';\nimport validate from './validate';\n\nexport { errors, validate };\n","// import Joi from '@hapi/joi';\nimport { Tantrum } from '~/utilities';\n\nexport default (schema) => (req, res, next) => {\n  const { value, error } = schema.validate({ ...req.body }, { abortEarly: false });\n  if (error) {\n    const messages = error.details.map((detail) => detail.message);\n    throw new Tantrum(401, messages);\n  }\n  if (!req.value) req.value = {};\n  req.value.fields = value;\n  next();\n};\n","import mongoose from 'mongoose';\nimport AvatarSchema from '../avatar/schema';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  id: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  username: {\n    type: String,\n    required: true,\n  },\n  profile_image: {\n    type: AvatarSchema,\n  },\n});\n\nexport default schema;\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  medium: {\n    type: String,\n    required: true,\n  },\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport schema from './schema';\n\nexport default mongoose.model('collection', schema);\n","import mongoose from 'mongoose';\nimport ImageSchema from '../image/schema';\nimport CommentSchema from '../comment/schema';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  subtitle: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'user',\n  },\n  images: [{\n    type: ImageSchema,\n    default: [],\n  }],\n  comment: [{\n    type: CommentSchema,\n    default: [],\n  }],\n  likes: {\n    type: Number,\n    default: 0,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nexport default schema;\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  type: {\n    type: String,\n    enum: ['collection', 'comment'],\n    default: 'collection',\n  },\n  comment: {\n    type: String,\n    required: true,\n  },\n  subcomments: [{\n    type: Schema.Types.ObjectId,\n    required: 'comment',\n  }],\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'user',\n  },\n  likes: {\n    type: Number,\n    default: 0,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport schema from './schema';\n\nexport default mongoose.model('image', schema);\n","import mongoose from 'mongoose';\nimport ArtistSchema from '../artist/schema';\nimport UrlSchema from '../url/schema';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  id: {\n    type: String,\n  },\n  alt_description: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  user: {\n    type: ArtistSchema,\n    required: true,\n  },\n  urls: {\n    type: UrlSchema,\n    required: true,\n  },\n  likes: {\n    type: Number,\n    default: 0,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nexport default schema;\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  medium: {\n    type: String,\n  },\n  regular: {\n    type: String,\n  },\n  full: {\n    type: String,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport bcrypt from 'bcryptjs';\nimport schema from './schema';\nimport { Tantrum } from '~/utilities';\n\n// Perform the following function before updating\n// the user in the database. Check if the password has\n// been modified, if so, hash the password before\n// saving.\n// eslint-disable-next-line\nschema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  const hash = await bcrypt.hash(this.password, 10)\n    .catch((err) => next(err));\n  this.password = hash;\n  return next();\n});\n\n// Validate the user password\nschema.methods.verifyPassword = (async (cipher, plain) => {\n  const comparison = await bcrypt.compare(plain, cipher)\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  return comparison;\n});\n\nexport default mongoose.model('user', schema);\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  username: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n  },\n  email: {\n    type: String,\n    required: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nexport default schema;\n","import { Tantrum } from '~/utilities';\nimport { errors, validate } from '~/middleware';\nimport { login, register } from '~/services/auth';\nimport registration from '~/validators/registration';\n\nexport default (router) => {\n  router.get('/', (req, res) => {\n    res.status(200).send({ message: 'Hello there' });\n  });\n\n  // Throw tantrum to test error\n  // handling\n  router.get('/error', () => {\n    throw new Tantrum(500, 'some error');\n  });\n\n  router.post('/login', async (req, res, next) => {\n    console.log(req.body);\n    const { email, password } = req.body;\n    const response = await login(email, password)\n      .catch((err) => next(err));\n    res.status(200).send(response);\n  });\n\n  router.post('/register', validate(registration), async (req, res, next) => {\n    const response = await register(req.value.fields)\n      .catch((err) => next(err));\n    res.status(200).send(response);\n  });\n\n  // router.get('/protected', authenticated, async (req, res) => {\n  //   res.status(200).send({ message: 'Cool cool cool' });\n  // });\n\n  // Last route to catch 404 endpoints\n  router.use((req, res, next) => {\n    const error = new Tantrum(404, 'Not found');\n    next(error);\n  });\n\n  // Catch all errors and report\n  router.use(errors.reporter);\n\n  // handle error and send response\n  // return router to be used in server\n  return router.use(errors.handler);\n};\n","import cors from 'cors';\nimport helmet from 'helmet';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport routes from '~/routes';\nimport apollo from '~/graphql/server';\n\nexport default () => {\n  const app = express();\n  const router = express.Router();\n\n  // Enable cors\n  app.use(cors());\n\n  // Help secure the app\n  app.use(helmet());\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  // Add apollo to the stack and provide\n  // grapql route\n  // you can now go to localhost:{port}/graphql\n  // to access the graphql playground\n  apollo.applyMiddleware({ app, path: '/graphql' });\n\n  // this statement is last\n  // so error handling can be\n  // applied\n  return app.use(routes(router));\n};\n","import jwt from 'jsonwebtoken';\nimport config from '~/config';\n\nconst generateJWT = (user) => jwt.sign(user.toJSON(), config.jwtSecret);\n\nexport default generateJWT;\n","import login from './login';\nimport register from './register';\n\nexport {\n  login, register,\n};\n","import User from '~/models/user';\nimport { Tantrum } from '~/utilities';\nimport generateJWT from './generateJWT';\n\nconst login = async (email, password) => {\n  console.log(email);\n  const user = await User\n    .findOne({ email })\n    .select('+password')\n    .exec()\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  if (!user) throw new Tantrum(404, 'User not found');\n  const verified = await user.verifyPassword(user.password, password);\n  if (!verified) throw new Tantrum(403, 'Username or password incorrect');\n  return {\n    user,\n    token: generateJWT(user),\n  };\n};\n\nexport default login;\n","import User from '~/models/user';\nimport { Tantrum } from '~/utilities';\nimport generateJWT from './generateJWT';\n\nconst register = async (fields) => {\n  const { username, name, password, email } = fields;\n  const user = new User({ username, name, password, email });\n  user.save()\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  return {\n    user,\n    token: generateJWT(user),\n  };\n};\n\nexport default register;\n","import logger from './logger';\nimport Tantrum from './tantrum';\n\nexport { logger, Tantrum };\n","import { createLogger, transports, format } from 'winston';\nimport config from '~/config';\n\nconst { combine, colorize, simple, json } = format;\n\n// Create the logger for the app\nconst logger = createLogger({\n  level: 'info',\n  format: json(),\n  transports: [\n    new transports.Console({\n      format: combine(\n        colorize(),\n        simple(),\n      ),\n      silent: config.env === 'test',\n    }),\n  ],\n});\n\nexport default logger;\n","// Custom error that extends\n// the default Error object.\n// Tantrum provides the ability\n// to add status codes to the error message\nclass Tantrum extends Error {\n  constructor(code, message) {\n    super(message);\n    this.status = code;\n  }\n}\n\nexport default Tantrum;\n","import Joi from '@hapi/joi';\n\nexport default Joi.object({\n  name: Joi.string().required().messages({\n    'any.required': 'Name is required',\n  }),\n  username: Joi.string().required().messages({\n    'any.required': 'Username is required',\n  }),\n  email: Joi.string().email().required().messages({\n    'any.required': 'Email is required',\n    'string.email': 'Must be a valid email address',\n  }),\n  password: Joi.string().min(6).required().messages({\n    'any.required': 'Password is required',\n    'string.min': 'Password must be atleast 6 characters',\n  }),\n  confirm: Joi.string().required().valid(Joi.ref('password')).messages({\n    'any.required': 'Password confirmation is required',\n    'any.only': 'Passwords must match',\n  }),\n});\n","module.exports = require(\"@hapi/joi\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongodb-memory-server\");","module.exports = require(\"mongoose\");","module.exports = require(\"path\");","module.exports = require(\"winston\");"],"sourceRoot":""}