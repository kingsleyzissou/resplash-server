{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config/index.js","webpack:///./src/database/index.js","webpack:///./src/graphql/resolvers/index.js","webpack:///./src/graphql/resolvers/user.js","webpack:///./src/graphql/schema/aggregator.js","webpack:///./src/graphql/schema/base.js","webpack:///./src/graphql/schema/index.js","webpack:///./src/graphql/schema/user.js","webpack:///./src/graphql/server.js","webpack:///./src/index.js","webpack:///./src/middleware/auth/authenticated.js","webpack:///./src/middleware/errors/handler.js","webpack:///./src/middleware/errors/index.js","webpack:///./src/middleware/errors/reporter.js","webpack:///./src/models/user/index.js","webpack:///./src/models/user/model.js","webpack:///./src/models/user/schema.js","webpack:///./src/routes/index.js","webpack:///./src/server.js","webpack:///./src/services/auth/generateJWT.js","webpack:///./src/services/auth/index.js","webpack:///./src/services/auth/login.js","webpack:///./src/services/auth/register.js","webpack:///./src/utilities/index.js","webpack:///./src/utilities/logger.js","webpack:///./src/utilities/tantrum.js","webpack:///external \"apollo-server-express\"","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongodb-memory-server\"","webpack:///external \"mongoose\"","webpack:///external \"path\"","webpack:///external \"winston\""],"names":["dotenv","config","test","process","NODE_ENV","connectionString","env","DB_HOST","MongoMemoryServer","getConnectionString","port","APP_PORT","root","path","resolve","__dirname","db","host","options","useCreateIndex","useNewUrlParser","useUnifiedTopology","jwtSecret","JWT_SECRET","database","connect","mongoose","catch","error","report","connection","on","disconnect","close","reset","dropDatabase","logger","userResolvers","Query","user","_","_id","User","findById","base","gql","aggregation","map","s","ApolloServer","introspection","typeDefs","resolvers","formatError","message","replace","app","server","listen","info","extractToken","header","Tantrum","split","authenticated","req","res","next","token","headers","authorization","jwt","verify","handler","status","send","reporter","Model","schema","pre","isModified","hash","bcrypt","password","err","methods","verifyPassword","cipher","plain","comparison","compare","model","Schema","username","type","String","required","name","email","created_at","Date","updated_at","router","get","post","body","response","login","register","use","errors","express","Router","cors","helmet","bodyParser","urlencoded","extended","json","apollo","applyMiddleware","routes","generateJWT","sign","toJSON","findOne","verified","save","combine","colorize","simple","format","createLogger","level","transports","Console","silent","Error","constructor","code"],"mappings":";;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEAA,6CAAM,CAACC,MAAP;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,QAAR,KAAqB,MAAlC;AAEA,MAAMC,gBAAgB,GAAI,CAACH,IAAF,GACrBC,OAAO,CAACG,GAAR,CAAYC,OADS,GAErB,IAAIC,uEAAJ,GAAwBC,mBAAxB,EAFJ;AAIe;AACbH,KAAG,EAAEH,aADQ;AAEbO,MAAI,EAAEP,OAAO,CAACG,GAAR,CAAYK,QAAZ,IAAwB,IAFjB;AAGbC,MAAI,EAAEC,2CAAI,CAACC,OAAL,CAAaC,SAAb,EAAwB,KAAxB,EAA+B,KAA/B,CAHO;AAIbC,IAAE,EAAE;AACFC,QAAI,EAAEZ,gBADJ;AAEFa,WAAO,EAAE;AACPC,oBAAc,EAAE,IADT;AAEPC,qBAAe,EAAE,IAFV;AAGPC,wBAAkB,EAAE;AAHb;AAFP,GAJS;AAYbC,WAAS,EAAEnB,OAAO,CAACG,GAAR,CAAYiB;AAZV,CAAf,E;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA,MAAMC,QAAQ,GAAG;AACf;AACA,QAAMC,OAAN,CAAc;AAAER,QAAF;AAAQC;AAAR,GAAd,EAAiC;AAC/B;AACA;AACA,UAAMQ,+CAAQ,CAACD,OAAT,CAAiBR,IAAjB,EAAuBC,OAAvB,EACHS,KADG,CACIC,KAAD,IAAW,KAAKC,MAAL,CAAYD,KAAZ,CADd,CAAN,CAH+B,CAK/B;;AACAF,mDAAQ,CAACI,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAiCH,KAAD,IAAW,KAAKC,MAAL,CAAYD,KAAZ,CAA3C;AACD,GATc;;AAUf,QAAMI,UAAN,GAAmB;AACjB,UAAMN,+CAAQ,CAACI,UAAT,CAAoBG,KAApB,EAAN;AACD,GAZc;;AAaf,QAAMC,KAAN,GAAc;AACZ,UAAMR,+CAAQ,CAACI,UAAT,CAAoBd,EAApB,CAAuBmB,YAAvB,EAAN;AACD,GAfc;;AAgBf;AACAN,QAAM,CAACD,KAAD,EAAQ;AACZQ,qDAAM,CAACR,KAAP,CAAaA,KAAb;AACD;;AAnBc,CAAjB;AAsBeJ,uEAAf,E;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAEe,gEACba,6CADa,CAAf,E;;;;;;;;;;;;ACFA;AAAA;AAAA;AAEe;AAEbC,OAAK,EAAE;AACLC,QAAI,EAAE,OAAOC,CAAP,EAAU;AAAEC;AAAF,KAAV,KAAsBC,oDAAI,CAACC,QAAL,CAAc;AAAEF;AAAF,KAAd;AADvB;AAFM,CAAf,E;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AAEe,gEAACG,6CAAD,EAAOL,6CAAP,CAAf,E;;;;;;;;;;;;ACHA;AAAgBM,kEAAD,IAASA,GAAI;;;;;;CAA5B,E;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEeC,kHAAW,CAACC,GAAZ,CAAiBC,CAAD,IAAOA,CAAC,CAACH,yDAAD,CAAxB,CAAf,E;;;;;;;;;;;;ACHA;AAAgBA,kEAAD,IAASA,GAAI;;;;;;;;;;;;;CAA5B,E;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEe,mEAAII,kEAAJ,CAAiB;AAC9BC,eAAa,EAAE,IADe;AAE9BC,2DAF8B;AAG9BC,+DAH8B;AAI9BC,aAAW,EAAGzB,KAAD,IAAW;AACtB,UAAM0B,OAAO,GAAG1B,KAAK,CAAC0B,OAAN,CACbC,OADa,CACL,4BADK,EACyB,EADzB,EAEbA,OAFa,CAEL,oBAFK,EAEiB,EAFjB,CAAhB;AAGA,6BACK3B,KADL;AAEE0B;AAFF;AAID;AAZ6B,CAAjB,CAAf,E;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;CAGA;;AACA,MAAME,GAAG,GAAGC,uDAAM,EAAlB,C,CAEA;;AACA,MAAM;AAAE/C,MAAF;AAAQM;AAAR,IAAef,+CAArB,C,CAEA;;AACAuB,iDAAQ,CAACC,OAAT,CAAiBT,EAAjB,E,CAGA;;AACAwC,GAAG,CAACE,MAAJ,CAAWhD,IAAX,EAAiB,MAAM;AACrB0B,mDAAM,CAACuB,IAAP,CACG,mCAAkCjD,IAAK,EAD1C;AAGD,CAJD;AAMe8C,kEAAf,E;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA,MAAMI,YAAY,GAAIC,MAAD,IAAY;AAC/B,MAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC,MAAM,IAAIC,0DAAJ,CAAY,GAAZ,EAAiB,qBAAjB,CAAN;AACnC,SAAOD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAP;AACD,CAHD;;AAKA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxC,QAAMC,KAAK,GAAGR,YAAY,CAACK,GAAG,CAACI,OAAJ,CAAYC,aAAb,CAA1B;AACAC,qDAAG,CAACC,MAAJ,CAAWJ,KAAX,EAAkBnE,+CAAM,CAACqB,SAAzB,EAFwC,CAGxC;;AACA6C,MAAI;AACL,CALD;;AAOeH,4EAAf,E;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;AACA;AACA,MAAMS,OAAO,GAAG,CAAC;AAAEnB,SAAF;AAAWoB;AAAX,CAAD,EAAsBT,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,KAAyC;AACvDD,KAAG,CAACQ,MAAJ,CAAWA,MAAX,EAAmBC,IAAnB,CAAwB;AAAErB;AAAF,GAAxB;AACD,CAFD;;AAIemB,sEAAf,E;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;CAGA;AACA;;AACe;AACbG,6DADa;AAEbH,2DAAOA;AAFM,CAAf,E;;;;;;;;;;;;ACLA;AAAA;CAEA;AACA;AACA;;AACA,MAAMG,QAAQ,GAAG,CAAC;AAAEtB,SAAF;AAAWoB;AAAX,CAAD,EAAsBT,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,KAAyC;AACxD;AACA,QAAMvC,KAAK,GAAG,IAAIkC,kDAAJ,CAAYY,MAAZ,EAAoBpB,OAApB,CAAd,CAFwD,CAGxD;;AACAlB,mDAAM,CAACR,KAAP,CAAaA,KAAb,EAJwD,CAKxD;;AACAuC,MAAI,CAACvC,KAAD,CAAJ;AACD,CAPD;;AASegD,uEAAf,E;;;;;;;;;;;;ACdA;AAAA;AAAA;AAEeC,6GAAf,E;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;CAGA;AACA;AACA;AACA;AACA;;AACAC,+CAAM,CAACC,GAAP,CAAW,MAAX,EAAmB,gBAAgBZ,IAAhB,EAAsB;AACvC,MAAI,CAAC,KAAKa,UAAL,CAAgB,UAAhB,CAAL,EAAkC,OAAOb,IAAI,EAAX;AAClC,QAAMc,IAAI,GAAG,MAAMC,6CAAM,CAACD,IAAP,CAAY,KAAKE,QAAjB,EAA2B,EAA3B,EAChBxD,KADgB,CACTyD,GAAD,IAASjB,IAAI,CAACiB,GAAD,CADH,CAAnB;AAEA,OAAKD,QAAL,GAAgBF,IAAhB;AACA,SAAOd,IAAI,EAAX;AACD,CAND,E,CAQA;;AACAW,+CAAM,CAACO,OAAP,CAAeC,cAAf,GAAiC,OAAOC,MAAP,EAAeC,KAAf,KAAyB;AACxD,QAAMC,UAAU,GAAG,MAAMP,6CAAM,CAACQ,OAAP,CAAeF,KAAf,EAAsBD,MAAtB,EACtB5D,KADsB,CACfyD,GAAD,IAAS;AACd,UAAM,IAAItB,kDAAJ,CAAY,GAAZ,EAAiBsB,GAAjB,CAAN;AACD,GAHsB,CAAzB;AAIA,SAAOK,UAAP;AACD,CAND;;AAQe/D,8GAAQ,CAACiE,KAAT,CAAe,MAAf,EAAuBb,+CAAvB,CAAf,E;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAEA,MAAM;AAAEc;AAAF,IAAalE,+CAAnB;AAEA,MAAMoD,MAAM,GAAG,IAAIc,MAAJ,CAAW;AACxBC,UAAQ,EAAE;AACRC,QAAI,EAAEC,MADE;AAERC,YAAQ,EAAE;AAFF,GADc;AAKxBC,MAAI,EAAE;AACJH,QAAI,EAAEC;AADF,GALkB;AAQxBG,OAAK,EAAE;AACLJ,QAAI,EAAEC,MADD;AAELC,YAAQ,EAAE;AAFL,GARiB;AAYxBb,UAAQ,EAAE;AACRW,QAAI,EAAEC,MADE;AAERC,YAAQ,EAAE;AAFF,GAZc;AAgBxBG,YAAU,EAAEC,IAhBY;AAiBxBC,YAAU,EAAED;AAjBY,CAAX,CAAf;AAoBetB,qEAAf,E;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEgBwB,qEAAD,IAAY;AACzBA,QAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,CAACtC,GAAD,EAAMC,GAAN,KAAc;AAC5BA,OAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAErB,aAAO,EAAE;AAAX,KAArB;AACD,GAFD,EADyB,CAKzB;AACA;;AACAgD,QAAM,CAACC,GAAP,CAAW,QAAX,EAAqB,MAAM;AACzB,UAAM,IAAIzC,kDAAJ,CAAY,GAAZ,EAAiB,YAAjB,CAAN;AACD,GAFD;AAIAwC,QAAM,CAACE,IAAP,CAAY,QAAZ,EAAsB,OAAOvC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC9C,UAAM;AAAE0B,cAAF;AAAYV;AAAZ,QAAyBlB,GAAG,CAACwC,IAAnC;AACA,UAAMC,QAAQ,GAAG,MAAMC,4DAAK,CAACd,QAAD,EAAWV,QAAX,CAAL,CACpBxD,KADoB,CACbyD,GAAD,IAASjB,IAAI,CAACiB,GAAD,CADC,CAAvB;AAEAlB,OAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB+B,QAArB;AACD,GALD;AAOAJ,QAAM,CAACE,IAAP,CAAY,WAAZ,EAAyB,OAAOvC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACjD,UAAMuC,QAAQ,GAAG,MAAME,+DAAQ,CAAC3C,GAAG,CAACwC,IAAL,CAAR,CACpB9E,KADoB,CACbyD,GAAD,IAASjB,IAAI,CAACiB,GAAD,CADC,CAAvB;AAEAlB,OAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB+B,QAArB;AACD,GAJD;AAMAJ,QAAM,CAACC,GAAP,CAAW,YAAX,EAAyBvC,sEAAzB,EAAwC,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1DA,OAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAErB,aAAO,EAAE;AAAX,KAArB;AACD,GAFD,EAxByB,CA4BzB;;AACAgD,QAAM,CAACO,GAAP,CAAW,CAAC5C,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7B,UAAMvC,KAAK,GAAG,IAAIkC,kDAAJ,CAAY,GAAZ,EAAiB,WAAjB,CAAd;AACAK,QAAI,CAACvC,KAAD,CAAJ;AACD,GAHD,EA7ByB,CAkCzB;;AACA0E,QAAM,CAACO,GAAP,CAAWC,0DAAM,CAAClC,QAAlB,EAnCyB,CAqCzB;AACA;;AACA,SAAO0B,MAAM,CAACO,GAAP,CAAWC,0DAAM,CAACrC,OAAlB,CAAP;AACD,CAxCD,E;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEe,qEAAM;AACnB,QAAMjB,GAAG,GAAGuD,8CAAO,EAAnB;AACA,QAAMT,MAAM,GAAGS,8CAAO,CAACC,MAAR,EAAf,CAFmB,CAInB;;AACAxD,KAAG,CAACqD,GAAJ,CAAQI,2CAAI,EAAZ,EALmB,CAOnB;;AACAzD,KAAG,CAACqD,GAAJ,CAAQK,6CAAM,EAAd;AAEA1D,KAAG,CAACqD,GAAJ,CAAQM,kDAAU,CAACC,UAAX,CAAsB;AAAEC,YAAQ,EAAE;AAAZ,GAAtB,CAAR;AACA7D,KAAG,CAACqD,GAAJ,CAAQM,kDAAU,CAACG,IAAX,EAAR,EAXmB,CAanB;AACA;AACA;AACA;;AACAC,yDAAM,CAACC,eAAP,CAAuB;AAAEhE,OAAF;AAAO3C,QAAI,EAAE;AAAb,GAAvB,EAjBmB,CAmBnB;AACA;AACA;;AACA,SAAO2C,GAAG,CAACqD,GAAJ,CAAQY,uDAAM,CAACnB,MAAD,CAAd,CAAP;AACD,CAvBD,E;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA,MAAMoB,WAAW,GAAInF,IAAD,IAAUgC,mDAAG,CAACoD,IAAJ,CAASpF,IAAI,CAACqF,MAAL,EAAT,EAAwB3H,+CAAM,CAACqB,SAA/B,CAA9B;;AAEeoG,0EAAf,E;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA,MAAMf,KAAK,GAAG,OAAOd,QAAP,EAAiBV,QAAjB,KAA8B;AAC1C,QAAM5C,IAAI,GAAG,MAAMG,oDAAI,CAACmF,OAAL,CAAa;AAAEhC;AAAF,GAAb,EAChBlE,KADgB,CACTyD,GAAD,IAAS;AACd,UAAM,IAAItB,kDAAJ,CAAY,GAAZ,EAAiBsB,GAAjB,CAAN;AACD,GAHgB,CAAnB;AAIA,MAAI,CAAC7C,IAAL,EAAW,MAAM,IAAIuB,kDAAJ,CAAY,GAAZ,EAAiB,gBAAjB,CAAN;AACX,QAAMgE,QAAQ,GAAG,MAAMvF,IAAI,CAAC+C,cAAL,CAAoB/C,IAAI,CAAC4C,QAAzB,EAAmCA,QAAnC,CAAvB;AACA,MAAI,CAAC2C,QAAL,EAAe,MAAM,IAAIhE,kDAAJ,CAAY,GAAZ,EAAiB,gCAAjB,CAAN;AACf,SAAO;AACLvB,QADK;AAEL6B,SAAK,EAAEsD,4DAAW,CAACnF,IAAD;AAFb,GAAP;AAID,CAZD;;AAceoE,oEAAf,E;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAOH,IAAP,IAAgB;AAC/B,QAAM;AAAEZ,YAAF;AAAYI,QAAZ;AAAkBd,YAAlB;AAA4Be;AAA5B,MAAsCO,IAA5C;AACA,QAAMlE,IAAI,GAAG,IAAIG,oDAAJ,CAAS;AAAEmD,YAAF;AAAYI,QAAZ;AAAkBd,YAAlB;AAA4Be;AAA5B,GAAT,CAAb;AACA3D,MAAI,CAACwF,IAAL,GACGpG,KADH,CACUyD,GAAD,IAAS;AACd,UAAM,IAAItB,kDAAJ,CAAY,GAAZ,EAAiBsB,GAAjB,CAAN;AACD,GAHH;AAID,CAPD;;AASewB,uEAAf,E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA,MAAM;AAAEoB,SAAF;AAAWC,UAAX;AAAqBC,QAArB;AAA6BZ;AAA7B,IAAsCa,8CAA5C,C,CAEA;;AACA,MAAM/F,MAAM,GAAGgG,4DAAY,CAAC;AAC1BC,OAAK,EAAE,MADmB;AAE1BF,QAAM,EAAEb,IAAI,EAFc;AAG1BgB,YAAU,EAAE,CACV,IAAIA,kDAAU,CAACC,OAAf,CAAuB;AACrBJ,UAAM,EAAEH,OAAO,CACbC,QAAQ,EADK,EAEbC,MAAM,EAFO,CADM;AAKrBM,UAAM,EAAEvI,+CAAM,CAACK,GAAP,KAAe;AALF,GAAvB,CADU;AAHc,CAAD,CAA3B;AAce8B,qEAAf,E;;;;;;;;;;;;ACpBA;AAAA;AACA;AACA;AACA;AACA,MAAM0B,OAAN,SAAsB2E,KAAtB,CAA4B;AAC1BC,aAAW,CAACC,IAAD,EAAOrF,OAAP,EAAgB;AACzB,UAAMA,OAAN;AACA,SAAKoB,MAAL,GAAciE,IAAd;AACD;;AAJyB;;AAOb7E,sEAAf,E;;;;;;;;;;;;;;;;;;;;;;;ACXA,kD;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import path from 'path';\nimport dotenv from 'dotenv';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\ndotenv.config();\n\nconst test = process.NODE_ENV === 'test';\n\nconst connectionString = (!test)\n  ? process.env.DB_HOST\n  : new MongoMemoryServer().getConnectionString();\n\nexport default {\n  env: process.env.NODE_ENV,\n  port: process.env.APP_PORT || 4000,\n  root: path.resolve(__dirname, '../', '../'),\n  db: {\n    host: connectionString,\n    options: {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    },\n  },\n  jwtSecret: process.env.JWT_SECRET,\n};\n","import mongoose from 'mongoose';\nimport { logger } from '~/utilities';\n\nconst database = {\n  // Connect to MongoDB\n  async connect({ host, options }) {\n    // Attempt connection or else\n    // catch any connection errors\n    await mongoose.connect(host, options)\n      .catch((error) => this.report(error));\n    // Handle errors after initial connection\n    mongoose.connection.on('error', (error) => this.report(error));\n  },\n  async disconnect() {\n    await mongoose.connection.close();\n  },\n  async reset() {\n    await mongoose.connection.db.dropDatabase();\n  },\n  // Report errors\n  report(error) {\n    logger.error(error);\n  },\n};\n\nexport default database;\n","import userResolvers from './user';\n\nexport default [\n  userResolvers,\n];\n","import User from '~/models/user';\n\nexport default {\n\n  Query: {\n    user: async (_, { _id }) => User.findById({ _id }),\n  },\n\n};\n","import base from './base';\nimport user from './user';\n\nexport default [base, user];\n","export default (gql) => gql`\n\n  type Query {\n    hello: String\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\nimport aggregation from './aggregator';\n\nexport default aggregation.map((s) => s(gql));\n","export default (gql) => gql`\n\n  extend type Query {\n    user(_id: String): User,\n  }\n\n  type User {\n    _id: String,\n    name: String,\n    username: String,\n    email: String\n  }\n\n`;\n","import { ApolloServer } from 'apollo-server-express';\nimport typeDefs from './schema';\nimport resolvers from './resolvers';\n\nexport default new ApolloServer({\n  introspection: true,\n  typeDefs,\n  resolvers,\n  formatError: (error) => {\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n    return {\n      ...error,\n      message,\n    };\n  },\n});\n","import server from '~/server';\nimport config from '~/config';\nimport database from '~/database';\nimport { logger } from '~/utilities';\n\n// Prepare the server\nconst app = server();\n\n// Get the server port\nconst { port, db } = config;\n\n// Connect to the database\ndatabase.connect(db);\n\n\n// Start the server\napp.listen(port, () => {\n  logger.info(\n    `App started on http://localhost:${port}`,\n  );\n});\n\nexport default app;\n","import jwt from 'jsonwebtoken';\nimport config from '~/config';\nimport Tantrum from '~/utilities/tantrum';\n\nconst extractToken = (header) => {\n  if (typeof header === 'undefined') throw new Tantrum(401, 'User not authorised');\n  return header.split(' ')[1];\n};\n\nconst authenticated = (req, res, next) => {\n  const token = extractToken(req.headers.authorization);\n  jwt.verify(token, config.jwtSecret);\n  // req.token = decoded;\n  next();\n};\n\nexport default authenticated;\n","// last method in the stack to catch\n// all errors and send the status cod\n// and error message\n// eslint-disable-next-line\nconst handler = ({ message, status }, req, res, next) => {\n  res.status(status).send({ message });\n};\n\nexport default handler;\n","import handler from './handler';\nimport reporter from './reporter';\n\n// export the two functions in\n// a single object\nexport default {\n  reporter,\n  handler,\n};\n","import { logger, Tantrum } from '~/utilities';\n\n// First method in the error stack\n// catches the error, logs it and\n// passes it down the stack\nconst reporter = ({ message, status }, req, res, next) => {\n  // Throw tantrum to be used for error\n  const error = new Tantrum(status, message);\n  // Log error\n  logger.error(error);\n  // Pass the error on\n  next(error);\n};\n\nexport default reporter;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\nimport schema from './schema';\nimport { Tantrum } from '~/utilities';\n\n// Perform the following function before updating\n// the user in the database. Check if the password has\n// been modified, if so, hash the password before\n// saving.\n// eslint-disable-next-line\nschema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  const hash = await bcrypt.hash(this.password, 10)\n    .catch((err) => next(err));\n  this.password = hash;\n  return next();\n});\n\n// Validate the user password\nschema.methods.verifyPassword = (async (cipher, plain) => {\n  const comparison = await bcrypt.compare(plain, cipher)\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  return comparison;\n});\n\nexport default mongoose.model('user', schema);\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  username: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n  },\n  email: {\n    type: String,\n    required: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nexport default schema;\n","import errors from '~/middleware/errors';\nimport { Tantrum } from '~/utilities';\nimport { login, register } from '~/services/auth';\nimport authenticated from '~/middleware/auth/authenticated';\n\nexport default (router) => {\n  router.get('/', (req, res) => {\n    res.status(200).send({ message: 'Hello there' });\n  });\n\n  // Throw tantrum to test error\n  // handling\n  router.get('/error', () => {\n    throw new Tantrum(500, 'some error');\n  });\n\n  router.post('/login', async (req, res, next) => {\n    const { username, password } = req.body;\n    const response = await login(username, password)\n      .catch((err) => next(err));\n    res.status(200).send(response);\n  });\n\n  router.post('/register', async (req, res, next) => {\n    const response = await register(req.body)\n      .catch((err) => next(err));\n    res.status(200).send(response);\n  });\n\n  router.get('/protected', authenticated, async (req, res) => {\n    res.status(200).send({ message: 'Cool cool cool' });\n  });\n\n  // Last route to catch 404 endpoints\n  router.use((req, res, next) => {\n    const error = new Tantrum(404, 'Not found');\n    next(error);\n  });\n\n  // Catch all errors and report\n  router.use(errors.reporter);\n\n  // handle error and send response\n  // return router to be used in server\n  return router.use(errors.handler);\n};\n","import cors from 'cors';\nimport helmet from 'helmet';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport routes from '~/routes';\nimport apollo from '~/graphql/server';\n\nexport default () => {\n  const app = express();\n  const router = express.Router();\n\n  // Enable cors\n  app.use(cors());\n\n  // Help secure the app\n  app.use(helmet());\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  // Add apollo to the stack and provide\n  // grapql route\n  // you can now go to localhost:{port}/graphql\n  // to access the graphql playground\n  apollo.applyMiddleware({ app, path: '/graphql' });\n\n  // this statement is last\n  // so error handling can be\n  // applied\n  return app.use(routes(router));\n};\n","import jwt from 'jsonwebtoken';\nimport config from '~/config';\n\nconst generateJWT = (user) => jwt.sign(user.toJSON(), config.jwtSecret);\n\nexport default generateJWT;\n","import login from './login';\nimport register from './register';\n\nexport {\n  login, register,\n};\n","import User from '~/models/user';\nimport { Tantrum } from '~/utilities';\nimport generateJWT from './generateJWT';\n\nconst login = async (username, password) => {\n  const user = await User.findOne({ username })\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  if (!user) throw new Tantrum(404, 'User not found');\n  const verified = await user.verifyPassword(user.password, password);\n  if (!verified) throw new Tantrum(403, 'Username or password incorrect');\n  return {\n    user,\n    token: generateJWT(user),\n  };\n};\n\nexport default login;\n","import User from '~/models/user';\nimport { Tantrum } from '~/utilities';\n\nconst register = async (body) => {\n  const { username, name, password, email } = body;\n  const user = new User({ username, name, password, email });\n  user.save()\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n};\n\nexport default register;\n","import logger from './logger';\nimport Tantrum from './tantrum';\n\nexport { logger, Tantrum };\n","import { createLogger, transports, format } from 'winston';\nimport config from '~/config';\n\nconst { combine, colorize, simple, json } = format;\n\n// Create the logger for the app\nconst logger = createLogger({\n  level: 'info',\n  format: json(),\n  transports: [\n    new transports.Console({\n      format: combine(\n        colorize(),\n        simple(),\n      ),\n      silent: config.env === 'test',\n    }),\n  ],\n});\n\nexport default logger;\n","// Custom error that extends\n// the default Error object.\n// Tantrum provides the ability\n// to add status codes to the error message\nclass Tantrum extends Error {\n  constructor(code, message) {\n    super(message);\n    this.status = code;\n  }\n}\n\nexport default Tantrum;\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongodb-memory-server\");","module.exports = require(\"mongoose\");","module.exports = require(\"path\");","module.exports = require(\"winston\");"],"sourceRoot":""}