{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/config/index.js","webpack:///./src/index.js","webpack:///./src/middleware/errors/handler.js","webpack:///./src/middleware/errors/index.js","webpack:///./src/middleware/errors/reporter.js","webpack:///./src/routes/index.js","webpack:///./src/utilities/logger.js","webpack:///./src/utilities/tantrum.js","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"path\"","webpack:///external \"winston\""],"names":["express","app","router","Router","use","cors","helmet","bodyParser","urlencoded","extended","json","routes","dotenv","config","port","process","env","APP_PORT","root","path","resolve","__dirname","db","DB_HOST","jwtSecret","JWT_SECRET","server","listen","logger","info","handler","message","status","req","res","next","send","reporter","error","Tantrum","get","errors","combine","colorize","simple","format","createLogger","level","transports","Console","Error","constructor","code"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import cors from 'cors';\nimport helmet from 'helmet';\nimport bodyParser from 'body-parser';\nimport routes from '~/routes';\n\nexport default (express) => {\n  const app = express();\n  const router = express.Router();\n\n  app.use(cors());\n\n  app.use(helmet());\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  // this statement is last\n  // so error handling can be\n  // applied\n  return app.use(routes(router));\n};\n","import path from 'path';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nexport default {\n  port: process.env.APP_PORT || 4000,\n  root: path.resolve(__dirname, '../', '../'),\n  db: process.env.DB_HOST,\n  jwtSecret: process.env.JWT_SECRET,\n};\n","import express from 'express';\nimport app from '~/app';\nimport config from '~/config';\nimport logger from '~/utilities/logger';\n\n// Prepare the server\nconst server = app(express);\n\n// Get the server port\nconst { port } = config;\n\n// Start the server\nserver.listen(port, () => {\n  logger.info(\n    `App started on http://localhost:${port}`,\n  );\n});\n","// last method in the stack to catch\n// all errors and send the status cod\n// and error message\n// eslint-disable-next-line\nconst handler = ({ message, status }, req, res, next) => {\n  res.send({ message, status });\n};\n\nexport default handler;\n","import handler from './handler';\nimport reporter from './reporter';\n\n// export the two functions in\n// a single object\nexport default {\n  reporter,\n  handler,\n};\n","import logger from '~/utilities/logger';\nimport Tantrum from '~/utilities/tantrum';\n\n// First method in the error stack\n// catches the error, logs it and\n// passes it down the stack\nconst reporter = ({ message, status }, req, res, next) => {\n  // Throw tantrum to be used for error\n  const error = new Tantrum(status, message);\n  // Log error\n  logger.error(error);\n  // Pass the error on\n  next(error);\n};\n\nexport default reporter;\n","import errors from '~/middleware/errors';\nimport Tantrum from '~/utilities/tantrum';\n\nexport default (router) => {\n  router.get('/', (req, res) => {\n    res.status(200).send({ message: 'Hello there' });\n  });\n\n  // Throw tantrum to test error\n  // handling\n  router.get('/error', () => {\n    throw new Tantrum(500, 'some error');\n  });\n\n  // Last route to catch 404 endpoints\n  router.use((req, res, next) => {\n    const error = new Tantrum(404, 'Not found');\n    next(error);\n  });\n\n  // Catch all errors and report\n  router.use(errors.reporter);\n\n  // handle error and send response\n  // return router to be used in server\n  return router.use(errors.handler);\n};\n","import { createLogger, transports, format } from 'winston';\n\nconst { combine, colorize, simple, json } = format;\n\nconst logger = createLogger({\n  level: 'info',\n  format: json(),\n  transports: [\n    new transports.Console({\n      format: combine(\n        colorize(),\n        simple(),\n      ),\n    }),\n  ],\n});\n\nexport default logger;\n","class Tantrum extends Error {\n  constructor(code, message) {\n    super(message);\n    this.status = code;\n  }\n}\n\nexport default Tantrum;\n","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"path\");","module.exports = require(\"winston\");"],"sourceRoot":""}