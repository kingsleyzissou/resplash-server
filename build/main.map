{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/index.js","webpack:///./src/utilities/logger.js","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"winston\""],"names":["app","use","cors","helmet","bodyParser","urlencoded","extended","json","server","express","port","listen","logger","info","combine","colorize","simple","format","createLogger","level","transports","Console"],"mappings":";;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEgBA,kEAAD,IAAS;AACtBA,KAAG,CAACC,GAAJ,CAAQC,2CAAI,EAAZ;AAEAF,KAAG,CAACC,GAAJ,CAAQE,6CAAM,EAAd;AAEAH,KAAG,CAACC,GAAJ,CAAQG,kDAAU,CAACC,UAAX,CAAsB;AAAEC,YAAQ,EAAE;AAAZ,GAAtB,CAAR;AACAN,KAAG,CAACC,GAAJ,CAAQG,kDAAU,CAACG,IAAX,EAAR;AAEA,SAAOP,GAAP;AACD,CATD,E;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,MAAMQ,MAAM,GAAGR,oDAAG,CAACS,8CAAO,EAAR,CAAlB;AAEA,MAAMC,IAAI,GAAG,IAAb;AAEAF,MAAM,CAACG,MAAP,CAAcD,IAAd,EAAoB,MAAM;AACxBE,2DAAM,CAACC,IAAP,CACG,mCAAkCH,IAAK,EAD1C;AAGD,CAJD,E;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAEA,MAAM;AAAEI,SAAF;AAAWC,UAAX;AAAqBC,QAArB;AAA6BT;AAA7B,IAAsCU,8CAA5C;AAEA,MAAML,MAAM,GAAGM,4DAAY,CAAC;AAC1BC,OAAK,EAAE,MADmB;AAE1BF,QAAM,EAAEV,IAAI,EAFc;AAG1Ba,YAAU,EAAE,CACV,IAAIA,kDAAU,CAACC,OAAf,CAAuB;AACrBJ,UAAM,EAAEH,OAAO,CACbC,QAAQ,EADK,EAEbC,MAAM,EAFO;AADM,GAAvB,CADU;AAHc,CAAD,CAA3B;AAaeJ,qEAAf,E;;;;;;;;;;;;;;;;;;;;;;;ACjBA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import cors from 'cors';\nimport helmet from 'helmet';\nimport bodyParser from 'body-parser';\n\nexport default (app) => {\n  app.use(cors());\n\n  app.use(helmet());\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  return app;\n}\n\n","import express from 'express';\nimport app from '~/app';\nimport logger from '~/utilities/logger';\n\nconst server = app(express());\n\nconst port = 3000;\n\nserver.listen(port, () => {\n  logger.info(\n    `App started on http://localhost:${port}`,\n  );\n});\n","import { createLogger, transports, format } from 'winston';\n\nconst { combine, colorize, simple, json } = format;\n\nconst logger = createLogger({\n  level: 'info',\n  format: json(),\n  transports: [\n    new transports.Console({\n      format: combine(\n        colorize(),\n        simple(),\n      ),\n    }),\n  ],\n});\n\nexport default logger;\n","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"winston\");"],"sourceRoot":""}