{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config/index.js","webpack:///./src/database/index.js","webpack:///./src/graphql/resolvers/collection.js","webpack:///./src/graphql/resolvers/comment.js","webpack:///./src/graphql/resolvers/index.js","webpack:///./src/graphql/resolvers/user.js","webpack:///./src/graphql/schema/aggregator.js","webpack:///./src/graphql/schema/artist.js","webpack:///./src/graphql/schema/avatar.js","webpack:///./src/graphql/schema/base.js","webpack:///./src/graphql/schema/collection.js","webpack:///./src/graphql/schema/comment.js","webpack:///./src/graphql/schema/image.js","webpack:///./src/graphql/schema/index.js","webpack:///./src/graphql/schema/like.js","webpack:///./src/graphql/schema/url.js","webpack:///./src/graphql/schema/user.js","webpack:///./src/graphql/server.js","webpack:///./src/index.js","webpack:///./src/middleware/auth/authenticated.js","webpack:///./src/middleware/auth/getToken.js","webpack:///./src/middleware/auth/index.js","webpack:///./src/middleware/errors/handler.js","webpack:///./src/middleware/errors/index.js","webpack:///./src/middleware/errors/reporter.js","webpack:///./src/middleware/index.js","webpack:///./src/middleware/validate/index.js","webpack:///./src/models/artist/schema.js","webpack:///./src/models/avatar/schema.js","webpack:///./src/models/collection/index.js","webpack:///./src/models/collection/model.js","webpack:///./src/models/collection/schema.js","webpack:///./src/models/comment/index.js","webpack:///./src/models/comment/model.js","webpack:///./src/models/comment/schema.js","webpack:///./src/models/image/index.js","webpack:///./src/models/image/model.js","webpack:///./src/models/image/schema.js","webpack:///./src/models/url/schema.js","webpack:///./src/models/user/index.js","webpack:///./src/models/user/model.js","webpack:///./src/models/user/schema.js","webpack:///./src/routes/index.js","webpack:///./src/server.js","webpack:///./src/services/auth/generateJWT.js","webpack:///./src/services/auth/index.js","webpack:///./src/services/auth/login.js","webpack:///./src/services/auth/register.js","webpack:///./src/utilities/index.js","webpack:///./src/utilities/logger.js","webpack:///./src/utilities/tantrum.js","webpack:///./src/validators/registration.js","webpack:///external \"@hapi/joi\"","webpack:///external \"apollo-server-express\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongodb-memory-server\"","webpack:///external \"mongoose\"","webpack:///external \"path\"","webpack:///external \"winston\""],"names":["dotenv","config","test","process","connectionString","env","DB_HOST","MongoMemoryServer","getConnectionString","then","string","port","APP_PORT","root","path","resolve","__dirname","db","host","options","useCreateIndex","useNewUrlParser","useUnifiedTopology","jwtSecret","JWT_SECRET","database","server","connect","mongoose","catch","error","report","connection","on","disconnect","stop","close","reset","dropDatabase","logger","Query","collection","_","_id","user","Collection","findOne","collections","args","find","userCollections","Mutation","addCollection","input","save","err","Tantrum","updateCollection","updateOne","deleteCollection","remove","addImage","image","Image","images","push","removeImage","pull","pushToCollection","comment","$push","comments","pushToSubcomment","Comment","typeId","type","obj","addComment","message","userResolvers","collectionResolvers","commentResolvers","User","findById","base","avatar","artist","url","like","gql","aggregation","map","s","ApolloServer","introspection","playground","typeDefs","resolvers","context","req","token","getToken","headers","authenticated","formatError","replace","app","listen","info","jwt","verify","authorization","split","handler","status","res","next","send","reporter","schema","value","validate","body","abortEarly","messages","details","detail","fields","Schema","id","String","required","name","username","profile_image","AvatarSchema","medium","Model","pre","populate","methods","likeDetails","likedByMe","likes","includes","count","length","model","subtitle","description","Types","ObjectId","ref","ImageSchema","default","created_at","Date","now","updated_at","enum","alt_description","ArtistSchema","urls","UrlSchema","Number","regular","full","isModified","hash","bcrypt","password","verifyPassword","cipher","plain","comparison","compare","email","select","router","get","post","response","login","registration","register","use","errors","express","Router","cors","helmet","bodyParser","urlencoded","extended","json","apollo","applyMiddleware","routes","generateJWT","sign","toJSON","exec","verified","combine","colorize","simple","format","createLogger","level","transports","Console","silent","Error","constructor","code","Joi","object","min","confirm","valid"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import path from 'path';\nimport dotenv from 'dotenv';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\ndotenv.config();\n\nconst test = process.env.NODE_ENV === 'test';\n\nconst connectionString = (!test)\n  ? process.env.DB_HOST\n  : new MongoMemoryServer()\n    .getConnectionString()\n    .then((string) => string);\n\nexport default {\n  env: process.env.NODE_ENV,\n  port: process.env.APP_PORT || 4000,\n  root: path.resolve(__dirname, '../', '../'),\n  db: {\n    host: connectionString,\n    options: {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    },\n  },\n  jwtSecret: process.env.JWT_SECRET,\n};\n","import mongoose from 'mongoose';\nimport { logger } from '~/utilities';\n\nconst database = {\n  // Connect to MongoDB\n  server: {},\n  async connect({ host, options, server }) {\n    // Attempt connection or else\n    // catch any connection errors\n    this.server = server;\n    await mongoose.connect(host, options)\n      .catch((error) => this.report(error));\n    // Handle errors after initial connection\n    mongoose.connection.on('error', (error) => this.report(error));\n  },\n  async disconnect() {\n    if (this.server) await this.server.stop();\n    await mongoose.connection.close();\n  },\n  async reset() {\n    await mongoose.connection.db.dropDatabase();\n  },\n  // Report errors\n  report(error) {\n    logger.error(error);\n  },\n};\n\nexport default database;\n","import Collection from '~/models/collection';\nimport Image from '~/models/image';\nimport Tantrum from '~/utilities/tantrum';\n\nexport default {\n\n  Query: {\n    collection: async (_, { _id }, { user }) => {\n      if (!user) return null;\n      return Collection.findOne({ _id });\n    },\n    collections: async (_, args, { user }) => {\n      if (!user) return null;\n      return Collection.find();\n    },\n    userCollections: async (_, args, { user }) => {\n      if (!user) return null;\n      return Collection.find({\n        user: {\n          _id: user._id,\n        },\n      });\n    },\n  },\n\n  Mutation: {\n    addCollection: async (_, { input }) => {\n      const collection = new Collection({ ...input });\n      await collection\n        .save()\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      return collection;\n    },\n    updateCollection: async (_, { _id, input }) => {\n      await Collection.updateOne({ _id }, { ...input })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      return Collection.findOne({ _id })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n    },\n    deleteCollection: async (_, { _id }) => {\n      const collection = await Collection.findOne({ _id })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      return collection.remove();\n    },\n    addImage: async (_, { _id, input }) => {\n      const image = new Image({ ...input });\n      const collection = await Collection.findOne({ _id })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      collection.images.push(image);\n      collection.save();\n      return collection;\n    },\n    removeImage: async (_, { _id, image }) => {\n      const collection = await Collection.findOne({ _id })\n        .catch((err) => {\n          throw new Tantrum(500, err);\n        });\n      collection.images.pull(image);\n      collection.save();\n      return collection;\n    },\n  },\n\n};\n","import Comment from '~/models/comment';\nimport Collection from '~/models/collection';\n\nconst pushToCollection = async (_id, comment) => {\n  await Collection.updateOne({ _id }, {\n    $push: {\n      comments: comment._id,\n    },\n  });\n  return comment;\n};\n\nconst pushToSubcomment = async (_id, comment) => {\n  await Comment.updateOne({ _id }, {\n    $push: {\n      comments: comment._id,\n    },\n  });\n  return comment;\n};\n\nexport default {\n\n  Query: {\n    comments: async (_, { typeId, type }) => {\n      const obj = (type === 'collection')\n        ? await Collection.findOne({ _id: typeId })\n        : await Comment.findOne({ _id: typeId });\n      return obj.comments;\n    },\n  },\n\n  Mutation: {\n    addComment: async (_, { typeId, type, input }, { user }) => {\n      if (!user) return null;\n      const comment = new Comment({\n        type, typeId, user: user._id, message: input,\n      });\n      await comment.save();\n      return (type === 'collection')\n        ? pushToCollection(typeId, comment)\n        : pushToSubcomment(typeId, comment);\n    },\n  },\n\n};\n","import userResolvers from './user';\nimport collectionResolvers from './collection';\nimport commentResolvers from './comment';\n\nexport default [\n  userResolvers,\n  collectionResolvers,\n  commentResolvers,\n];\n","import User from '~/models/user';\n\nexport default {\n\n  Query: {\n    user: async (_, { _id }, { user }) => {\n      if (!user) return null;\n      return User.findById({ _id });\n    },\n  },\n\n};\n","import base from './base';\nimport user from './user';\nimport collection from './collection';\nimport image from './image';\nimport comment from './comment';\nimport artist from './artist';\nimport avatar from './avatar';\nimport url from './url';\nimport like from './like';\n\nexport default [base, user, comment, collection, image, avatar, artist, url, like];\n","export default (gql) => gql`\n\n  type Artist {\n    id: String,\n    name: String,\n    profile_image: Avatar,\n    username: String,\n  }\n\n  input ArtistInput {\n    id: String,\n    name: String,\n    profile_image: AvatarInput,\n    username: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  type Avatar {\n    medium: String,\n  }\n\n  input AvatarInput {\n    medium: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  type Query {\n    hello: String\n  }\n\n  type Mutation {\n    sayHello(name: String!): String!\n  }\n\n`;\n","export default (gql) => gql`\n\n  extend type Query {\n    collection(_id: String): Collection,\n    collections: [Collection],\n    userCollections: [Collection],\n  }\n\n  extend type Mutation {\n    addCollection(input: CollectionAdd): Collection,\n    deleteCollection(_id: String): Collection,\n    updateCollection(_id: String, input: CollectionUpdate): Collection,\n    addImage(_id: String, input: ImageInput): Collection,\n    removeImage(_id: String, image: String): Collection,\n  }\n\n  type Collection {\n    _id: String,\n    name: String,\n    subtitle: String,\n    description: String,\n    user: User,\n    images: [Image],\n    comments: [Comment],\n  }\n\n  input CollectionAdd {\n    name: String,\n    subtitle: String,\n    description: String,\n    user: String,\n  }\n\n  input CollectionUpdate {\n    name: String,\n    subtitle: String,\n    description: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  enum CommentType {\n    collection\n    comment\n  }\n\n  extend type Query {\n    comment(_id: String): Comment,\n    comments(typeId: String, type: CommentType): [Comment],\n  }\n\n  extend type Mutation {\n    addComment(typeId: String, type: CommentType, input: String): Comment,\n  }\n\n  type Comment {\n    _id: String,\n    type: CommentType,\n    typeId: String,\n    message: String,\n    comments: [Comment],\n    user: User,\n    created_at: String,\n  }\n\n  input CommentInput {\n    type: CommentType,\n    comments: [CommentInput],\n    user: String,\n    typeId: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  extend type Query {\n    image(id: String): Image,\n    images: [Image],\n  }\n\n  type Image {\n    _id: String,\n    description: String,\n    alt_description: String,\n    user: Artist,\n    urls: Url,\n    likeStats: Like,\n  }\n\n  input ImageInput {\n    id: String,\n    description: String,\n    alt_description: String,\n    user: ArtistInput,\n    urls: UrlInput,\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\nimport aggregation from './aggregator';\n\nexport default aggregation.map((s) => s(gql));\n","export default (gql) => gql`\n\n  extend type Query {\n    likes: Like,\n  }\n\n  type Like {\n    likedByMe: Boolean,\n    count: Int,\n  }\n\n`;\n","export default (gql) => gql`\n\n  type Url {\n    full: String,\n    regular: String,\n  }\n\n  input UrlInput {\n    full: String,\n    regular: String,\n  }\n\n`;\n","export default (gql) => gql`\n\n  extend type Query {\n    user(_id: String): User,\n  }\n\n  type User {\n    _id: String,\n    name: String,\n    username: String,\n    email: String,\n    collections: [Collection],\n  }\n\n`;\n","import { ApolloServer } from 'apollo-server-express';\nimport { authenticated, getToken } from '~/middleware/auth';\nimport resolvers from './resolvers';\nimport typeDefs from './schema';\n\nexport default new ApolloServer({\n  introspection: true,\n  playground: true,\n  typeDefs,\n  resolvers,\n  async context({ req }) {\n    const token = getToken(req.headers);\n    return {\n      user: (authenticated({ token }))\n        ? authenticated({ token })\n        : null,\n    };\n  },\n  formatError: (error) => {\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n    return {\n      ...error,\n      message,\n    };\n  },\n});\n","import server from '~/server';\nimport config from '~/config';\nimport database from '~/database';\nimport { logger } from '~/utilities';\n\n// Prepare the server\nconst app = server();\n\n// Get the server port\nconst { port, db } = config;\n\n// Connect to the database\ndatabase.connect(db);\n\n\n// Start the server\napp.listen(port, () => {\n  logger.info(\n    `App started on http://localhost:${port}`,\n  );\n});\n\nexport default app;\n","import jwt from 'jsonwebtoken';\nimport config from '~/config';\nimport Tantrum from '~/utilities/tantrum';\n\nconst authenticated = ({ token }) => {\n  if (!token) throw new Tantrum(401, 'User not authenticated');\n  return jwt.verify(token, config.jwtSecret);\n};\n\nexport default authenticated;\n","import Tantrum from '~/utilities/tantrum';\n\nconst getToken = ({ authorization }) => {\n  if (!authorization) throw new Tantrum(403, 'User not authorised');\n  return authorization.split(' ')[1];\n};\n\nexport default getToken;\n","import authenticated from './authenticated';\nimport getToken from './getToken';\n\nexport { authenticated, getToken };\n","// last method in the stack to catch\n// all errors and send the status cod\n// and error message\n// eslint-disable-next-line\nconst handler = ({ message, status }, req, res, next) => {\n  res.status(status).send({ message });\n};\n\nexport default handler;\n","import handler from './handler';\nimport reporter from './reporter';\n\n// export the two functions in\n// a single object\nexport default {\n  reporter,\n  handler,\n};\n","import { logger, Tantrum } from '~/utilities';\n\n// First method in the error stack\n// catches the error, logs it and\n// passes it down the stack\nconst reporter = ({ message, status }, req, res, next) => {\n  // Throw tantrum to be used for error\n  const error = new Tantrum(status, message);\n  // Log error\n  logger.error(message);\n  // Pass the error on\n  next(error);\n};\n\nexport default reporter;\n","import errors from './errors';\nimport validate from './validate';\n\nexport { errors, validate };\n","// import Joi from '@hapi/joi';\nimport { Tantrum } from '~/utilities';\n\nexport default (schema) => (req, res, next) => {\n  const { value, error } = schema.validate({ ...req.body }, { abortEarly: false });\n  if (error) {\n    const messages = error.details.map((detail) => detail.message);\n    throw new Tantrum(401, messages);\n  }\n  if (!req.value) req.value = {};\n  req.value.fields = value;\n  next();\n};\n","import mongoose from 'mongoose';\nimport AvatarSchema from '../avatar/schema';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  id: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  username: {\n    type: String,\n    required: true,\n  },\n  profile_image: {\n    type: AvatarSchema,\n  },\n});\n\nexport default schema;\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  medium: {\n    type: String,\n    required: true,\n  },\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport schema from './schema';\n\n// eslint-disable-next-line\nschema.pre(['find', 'findOne'], function () {\n  this.populate('user');\n  this.populate('comments');\n});\n\n// eslint-disable-next-line\nschema.methods.likeDetails = function (user) {\n  return {\n    likedByMe: this.likes.includes(user),\n    count: this.likes.length,\n  };\n};\n\nexport default mongoose.model('collection', schema);\n","import mongoose from 'mongoose';\nimport ImageSchema from '../image/schema';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  subtitle: {\n    type: String,\n    required: true,\n  },\n  description: {\n    type: String,\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'user',\n  },\n  images: [{\n    type: ImageSchema,\n    default: [],\n  }],\n  comments: [{\n    type: Schema.Types.ObjectId,\n    ref: 'comment',\n  }],\n  likes: [{\n    type: Schema.Types.ObjectId,\n    ref: 'user',\n    default: [],\n  }],\n  created_at: {\n    type: Date,\n    default: Date.now,\n  },\n  updated_at: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport schema from './schema';\n\n// eslint-disable-next-line\nschema.pre(['find', 'findOne'], function () {\n  this.populate('user');\n  this.populate('comments');\n});\n\n// eslint-disable-next-line\nschema.methods.likeDetails = function (user) {\n  return {\n    likedByMe: this.likes.includes(user),\n    count: this.likes.length,\n  };\n};\n\nexport default mongoose.model('comment', schema);\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  type: {\n    type: String,\n    enum: ['collection', 'comment'],\n    default: 'collection',\n  },\n  typeId: Schema.Types.ObjectId,\n  message: {\n    type: String,\n    required: true,\n  },\n  comments: [{\n    type: Schema.Types.ObjectId,\n    ref: 'comment',\n    default: [],\n  }],\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'user',\n  },\n  likes: [{\n    type: Schema.Types.ObjectId,\n    ref: 'user',\n    default: [],\n  }],\n  created_at: {\n    type: Date,\n    default: Date.now,\n  },\n  updated_at: {\n    type: Date,\n    default: Date.now,\n  },\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport schema from './schema';\n\nexport default mongoose.model('image', schema);\n","import mongoose from 'mongoose';\nimport ArtistSchema from '../artist/schema';\nimport UrlSchema from '../url/schema';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  id: {\n    type: String,\n  },\n  alt_description: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  user: {\n    type: ArtistSchema,\n    required: true,\n  },\n  urls: {\n    type: UrlSchema,\n    required: true,\n  },\n  likes: {\n    type: Number,\n    default: 0,\n  },\n});\n\nexport default schema;\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  medium: {\n    type: String,\n  },\n  regular: {\n    type: String,\n  },\n  full: {\n    type: String,\n  },\n});\n\nexport default schema;\n","import Model from './model';\n\nexport default Model;\n","import mongoose from 'mongoose';\nimport bcrypt from 'bcryptjs';\nimport schema from './schema';\nimport { Tantrum } from '~/utilities';\n\n// Perform the following function before updating\n// the user in the database. Check if the password has\n// been modified, if so, hash the password before\n// saving.\n// eslint-disable-next-line\nschema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  const hash = await bcrypt.hash(this.password, 10)\n    .catch((err) => next(err));\n  this.password = hash;\n  return next();\n});\n\n// Validate the user password\nschema.methods.verifyPassword = (async (cipher, plain) => {\n  const comparison = await bcrypt.compare(plain, cipher)\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  return comparison;\n});\n\nexport default mongoose.model('user', schema);\n","import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nconst schema = new Schema({\n  username: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n  },\n  email: {\n    type: String,\n    required: true,\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false,\n  },\n});\n\nexport default schema;\n","import { Tantrum } from '~/utilities';\nimport { errors, validate } from '~/middleware';\nimport { login, register } from '~/services/auth';\nimport registration from '~/validators/registration';\n\nexport default (router) => {\n  router.get('/', (req, res) => {\n    res.status(200).send({ message: 'Hello there' });\n  });\n\n  // Throw tantrum to test error\n  // handling\n  router.get('/error', () => {\n    throw new Tantrum(500, 'some error');\n  });\n\n  router.post('/login', async (req, res, next) => {\n    const { email, password } = req.body;\n    const response = await login(email, password)\n      .catch((err) => next(err));\n    res.status(200).send(response);\n  });\n\n  router.post('/register', validate(registration), async (req, res, next) => {\n    const response = await register(req.value.fields)\n      .catch((err) => next(err));\n    res.status(200).send(response);\n  });\n\n  // router.get('/protected', authenticated, async (req, res) => {\n  //   res.status(200).send({ message: 'Cool cool cool' });\n  // });\n\n  // Last route to catch 404 endpoints\n  router.use((req, res, next) => {\n    const error = new Tantrum(404, 'Not found');\n    next(error);\n  });\n\n  // Catch all errors and report\n  router.use(errors.reporter);\n\n  // handle error and send response\n  // return router to be used in server\n  return router.use(errors.handler);\n};\n","import cors from 'cors';\nimport helmet from 'helmet';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport apollo from '~/graphql/server';\nimport routes from '~/routes';\n\nexport default () => {\n  const app = express();\n  const router = express.Router();\n\n  // Enable cors\n  app.use(cors());\n\n  // Help secure the app\n  app.use(helmet());\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  // Add apollo to the stack and provide\n  // grapql route\n  // you can now go to localhost:{port}/graphql\n  // to access the graphql playground\n  apollo.applyMiddleware({ app, path: '/graphql' });\n\n  // this statement is last\n  // so error handling can be\n  // applied\n  return app.use(routes(router));\n};\n","import jwt from 'jsonwebtoken';\nimport config from '~/config';\n\nconst generateJWT = (user) => jwt.sign(user.toJSON(), config.jwtSecret);\n\nexport default generateJWT;\n","import login from './login';\nimport register from './register';\n\nexport {\n  login, register,\n};\n","import User from '~/models/user';\nimport { Tantrum } from '~/utilities';\nimport generateJWT from './generateJWT';\n\nconst login = async (email, password) => {\n  const user = await User\n    .findOne({ email })\n    .select('+password')\n    .exec()\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  if (!user) throw new Tantrum(404, 'User not found');\n  const verified = await user.verifyPassword(user.password, password);\n  if (!verified) throw new Tantrum(403, 'Username or password incorrect');\n  return {\n    user,\n    token: generateJWT(user),\n  };\n};\n\nexport default login;\n","import User from '~/models/user';\nimport { Tantrum } from '~/utilities';\nimport generateJWT from './generateJWT';\n\nconst register = async (fields) => {\n  const { username, name, password, email } = fields;\n  const user = new User({ username, name, password, email });\n  user.save()\n    .catch((err) => {\n      throw new Tantrum(500, err);\n    });\n  return {\n    user,\n    token: generateJWT(user),\n  };\n};\n\nexport default register;\n","import logger from './logger';\nimport Tantrum from './tantrum';\n\nexport { logger, Tantrum };\n","import { createLogger, transports, format } from 'winston';\nimport config from '~/config';\n\nconst { combine, colorize, simple, json } = format;\n\n// Create the logger for the app\nconst logger = createLogger({\n  level: 'info',\n  format: json(),\n  transports: [\n    new transports.Console({\n      format: combine(\n        colorize(),\n        simple(),\n      ),\n      silent: config.env === 'test',\n    }),\n  ],\n});\n\nexport default logger;\n","// Custom error that extends\n// the default Error object.\n// Tantrum provides the ability\n// to add status codes to the error message\nclass Tantrum extends Error {\n  constructor(code, message) {\n    super(message);\n    this.status = code;\n  }\n}\n\nexport default Tantrum;\n","import Joi from '@hapi/joi';\n\nexport default Joi.object({\n  name: Joi.string().required().messages({\n    'any.required': 'Name is required',\n  }),\n  username: Joi.string().required().messages({\n    'any.required': 'Username is required',\n  }),\n  email: Joi.string().email().required().messages({\n    'any.required': 'Email is required',\n    'string.email': 'Must be a valid email address',\n  }),\n  password: Joi.string().min(6).required().messages({\n    'any.required': 'Password is required',\n    'string.min': 'Password must be atleast 6 characters',\n  }),\n  confirm: Joi.string().required().valid(Joi.ref('password')).messages({\n    'any.required': 'Password confirmation is required',\n    'any.only': 'Passwords must match',\n  }),\n});\n","module.exports = require(\"@hapi/joi\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongodb-memory-server\");","module.exports = require(\"mongoose\");","module.exports = require(\"path\");","module.exports = require(\"winston\");"],"sourceRoot":""}